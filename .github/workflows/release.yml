name: Release

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write # create release
  packages: write # ghcr.io push
  id-token: write # provenance/SLSA

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      # ————————————————————————————————————————————————
      # Checkout & Go toolchain
      # ————————————————————————————————————————————————
      - name: ✨ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # full history for changelog

      - name: 🧰 Setup Go 1.24
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"
          check-latest: true

      # ————————————————————————————————————————————————
      # Build cache
      # ————————————————————————————————————————————————
      - name: ♻️ Cache Go build
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # ————————————————————————————————————————————————
      # Cosign: install & generate key-pair (no password)
      # ————————————————————————————————————————————————
      - name: 📦 Install Cosign
        run: |
          go install github.com/sigstore/cosign/v2/cmd/cosign@v2.2.3
          echo "$(go env GOPATH)/bin" >> $GITHUB_PATH

      - name: 🔑 Generate ephemeral cosign key (no password)
        run: cosign generate-key-pair -k cosign.key -p ""

      # ————————————————————————————————————————————————
      # Install GoReleaser
      # ————————————————————————————————————————————————
      - name: 📦 Install GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          install-only: true
          version: v2.9.0

      # ————————————————————————————————————————————————
      # Run GoReleaser
      # ————————————————————————————————————————————————
      - name: 🚀 Run GoReleaser
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goreleaser release --clean --timeout 60m

  docker:
    needs: goreleaser
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: ✨ Checkout code
        uses: actions/checkout@v4

      - name: 🔑 Login to ghcr.io
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️  Build & push multi-arch image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: build/docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/arena-cache-inspect:${{ github.ref_name }}
            ghcr.io/${{ github.repository_owner }}/arena-cache-inspect:latest
          platforms: linux/amd64,linux/arm64

  pkgsite-badge:
    if: startsWith(github.ref, 'refs/tags/')
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: 🔄 Ping pkg.go.dev for indexing
        run: |
          curl -sSf -X PURGE "https://proxy.golang.org/github.com/${{ github.repository }}/@v/${{ github.ref_name }}.zip" || true
          curl -sSf "https://pkg.go.dev/github.com/${{ github.repository }}?tab=versions" -o /dev/null || true
